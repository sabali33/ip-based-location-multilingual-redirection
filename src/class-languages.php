<?php
/**
 * Languages Class
 *
 * Provides a static method to retrieve the primary language(s) spoken in a country,
 * based on its ISO 2-letter country code.
 *
 * This mapping is useful for geo-location-based redirection or localization features.
 *
 * @package Sagani_IP_Location_Multilingual_Redirection\Geo
 */

declare(strict_types=1);

namespace Sagani_IP_Location_Multilingual_Redirection\src;

/**
 * Provides mapping for geo-location-based redirection.
 */
class Languages {

	/**
	 * Get language(s) spoken in a given country using its ISO 2-letter country code.
	 *
	 * The method returns a comma-separated list of language codes (ISO 639-1 or other relevant standards).
	 * If the country code is unknown, the default language returned is 'en' (English).
	 *
	 * @param string $country ISO 3166-1 alpha-2 country code (e.g., 'US', 'DE').
	 * @return string Comma-separated list of language codes (e.g., "en", "de,fr").
	 */
	public static function get_language_by_country( string $country ): string {
		$map = array(
			'AF' => 'ps,uz,tur',
			'AL' => 'sq',
			'DZ' => 'ar',
			'AS' => 'en,sm',
			'AD' => 'ca',
			'AO' => 'pt',
			'AG' => 'en',
			'AR' => 'es',
			'AM' => 'hy',
			'AU' => 'en',
			'AT' => 'de',
			'AZ' => 'az',
			'BS' => 'en',
			'BH' => 'ar',
			'BD' => 'bn',
			'BB' => 'en',
			'BY' => 'be,ru',
			'BE' => 'nl,fr,de',
			'BZ' => 'en,es',
			'BJ' => 'fr',
			'BT' => 'dz',
			'BO' => 'es,qu,ay',
			'BA' => 'bs,hr,sr',
			'BW' => 'en,tn',
			'BR' => 'pt',
			'BN' => 'ms',
			'BG' => 'bg',
			'BF' => 'fr',
			'BI' => 'fr,ru',
			'KH' => 'km',
			'CM' => 'fr,en',
			'CA' => 'en,fr',
			'CV' => 'pt',
			'CF' => 'fr,sango',
			'TD' => 'fr,ar',
			'CL' => 'es',
			'CN' => 'zh',
			'CO' => 'es',
			'KM' => 'ar,fr',
			'CD' => 'fr',
			'CG' => 'fr',
			'CR' => 'es',
			'CI' => 'fr',
			'HR' => 'hr',
			'CU' => 'es',
			'CY' => 'el,tr',
			'CZ' => 'cs',
			'DK' => 'da',
			'DJ' => 'fr,ar',
			'DM' => 'en',
			'DO' => 'es',
			'EC' => 'es',
			'EG' => 'ar',
			'SV' => 'es',
			'GQ' => 'es,fr,pt',
			'ER' => 'ti,ar,en',
			'EE' => 'et',
			'ET' => 'am',
			'FJ' => 'en,fj,hi,ur',
			'FI' => 'fi,sv',
			'FR' => 'fr',
			'GA' => 'fr',
			'GM' => 'en',
			'GE' => 'ka',
			'DE' => 'de',
			'GH' => 'en',
			'GR' => 'el',
			'GD' => 'en',
			'GT' => 'es',
			'GN' => 'fr',
			'GW' => 'pt',
			'GY' => 'en',
			'HT' => 'fr,ht',
			'HN' => 'es',
			'HU' => 'hu',
			'IS' => 'is',
			'IN' => 'hi,en',
			'ID' => 'id',
			'IR' => 'fa',
			'IQ' => 'ar,ku',
			'IE' => 'en,ga',
			'IL' => 'he,ar',
			'IT' => 'it',
			'JM' => 'en',
			'JP' => 'ja',
			'JO' => 'ar',
			'KZ' => 'kk,ru',
			'KE' => 'en,sw',
			'KI' => 'en,gil',
			'KR' => 'ko',
			'KW' => 'ar',
			'KG' => 'ky,ru',
			'LA' => 'lo',
			'LV' => 'lv',
			'LB' => 'ar,fr',
			'LS' => 'en,st',
			'LR' => 'en',
			'LY' => 'ar',
			'LI' => 'de',
			'LT' => 'lt',
			'LU' => 'fr,de,lb',
			'MG' => 'fr,mg',
			'MW' => 'en,ny',
			'MY' => 'ms',
			'MV' => 'dv',
			'ML' => 'fr',
			'MT' => 'mt,en',
			'MH' => 'en,mh',
			'MR' => 'ar,fr',
			'MU' => 'en,fr',
			'MX' => 'es',
			'MD' => 'ro',
			'MC' => 'fr',
			'MN' => 'mn',
			'ME' => 'srp',
			'MA' => 'ar,fr',
			'MZ' => 'pt',
			'MM' => 'my',
			'NA' => 'en',
			'NR' => 'en,na',
			'NP' => 'ne',
			'NL' => 'nl',
			'NZ' => 'en,mi',
			'NI' => 'es',
			'NE' => 'fr',
			'NG' => 'en',
			'NO' => 'no',
			'OM' => 'ar',
			'PK' => 'ur,en',
			'PW' => 'en,pau',
			'PA' => 'es',
			'PG' => 'en,tpi',
			'PY' => 'es,gn',
			'PE' => 'es',
			'PH' => 'en,fil',
			'PL' => 'pl',
			'PT' => 'pt',
			'QA' => 'ar',
			'RO' => 'ro',
			'RU' => 'ru',
			'RW' => 'rw,en,fr',
			'KN' => 'en',
			'LC' => 'en',
			'VC' => 'en',
			'WS' => 'sm,en',
			'SM' => 'it',
			'ST' => 'pt',
			'SA' => 'ar',
			'SN' => 'fr',
			'RS' => 'sr',
			'SC' => 'en,fr',
			'SL' => 'en',
			'SG' => 'en,ms,ta,zh',
			'SK' => 'sk',
			'SI' => 'sl',
			'SB' => 'en',
			'SO' => 'so,ar',
			'ZA' => 'af,en,nso,zu,xh,st,tn,ts,ss,ve,nr',
			'SS' => 'en',
			'ES' => 'es,ca,eu,gl',
			'LK' => 'si,ta',
			'SD' => 'ar,en',
			'SR' => 'nl',
			'SE' => 'sv',
			'CH' => 'de,fr,it,rm',
			'SY' => 'ar',
			'TW' => 'zh',
			'TJ' => 'tg,ru',
			'TZ' => 'sw,en',
			'TH' => 'th',
			'TL' => 'pt,tet',
			'TG' => 'fr',
			'TO' => 'en,to',
			'TT' => 'en',
			'TN' => 'ar',
			'TR' => 'tr',
			'TM' => 'tk,ru',
			'UG' => 'en,sw',
			'UA' => 'uk',
			'AE' => 'ar',
			'GB' => 'en',
			'US' => 'en',
			'UY' => 'es',
			'UZ' => 'uz',
			'VU' => 'bi,en,fr',
			'VA' => 'la,it',
			'VE' => 'es',
			'VN' => 'vi',
			'YE' => 'ar',
			'ZM' => 'en',
			'ZW' => 'en,sn,nd',
		);

		return $map[ strtoupper( $country ) ] ?? 'en'; // Default fallback.
	}
}
